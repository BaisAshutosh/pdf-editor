!function (e, t) { "object" == typeof exports && "undefined" != typeof module ? t(exports) : "function" == typeof define && define.amd ? define(["exports"], t) : t((e = "undefined" != typeof globalThis ? globalThis : e || self).bootstrap = {}) }(this, (function (e) { "use strict"; const t = new Map; var n = { set(e, n, r) { t.has(e) || t.set(e, new Map); const o = t.get(e); o.has(n) || 0 === o.size ? o.set(n, r) : console.error(`Bootstrap doesn't allow more than one instance per element. Bound instance: ${Array.from(o.keys())[0]}.`) }, get: (e, n) => t.has(e) && t.get(e).get(n) || null, remove(e, n) { if (!t.has(e)) return; const r = t.get(e); r.delete(n), 0 === r.size && t.delete(e) } }; const r = "transitionend", o = e => !(!e || "object" != typeof e) && (void 0 !== e.jquery && (e = e[0]), void 0 !== e.nodeType), s = e => { return o(e) ? e.jquery ? e[0] : e : "string" == typeof e && e.length > 0 ? document.querySelector(((t = e) && window.CSS && window.CSS.escape && (t = t.replace(/#([^\s"#']+)/g, ((e, t) => `#${CSS.escape(t)}`))), t)) : null; var t }, i = () => window.jQuery && !document.body.hasAttribute("data-bs-no-jquery") ? window.jQuery : null, a = [], c = (e, t = [], n = e) => "function" == typeof e ? e.call(...t) : n, u = (e, t, n = !0) => { if (!n) return void c(e); const o = (e => { if (!e) return 0; let { transitionDuration: t, transitionDelay: n } = window.getComputedStyle(e); const r = Number.parseFloat(t), o = Number.parseFloat(n); return r || o ? (t = t.split(",")[0], n = n.split(",")[0], 1e3 * (Number.parseFloat(t) + Number.parseFloat(n))) : 0 })(t) + 5; let s = !1; const i = ({ target: n }) => { n === t && (s = !0, t.removeEventListener(r, i), c(e)) }; t.addEventListener(r, i), setTimeout((() => { s || t.dispatchEvent(new Event(r)) }), o) }, l = /[^.]*(?=\..*)\.|.*/, f = /\..*/, g = /::\d+$/, d = {}; let p = 1; const h = { mouseenter: "mouseover", mouseleave: "mouseout" }, b = new Set(["click", "dblclick", "mouseup", "mousedown", "contextmenu", "mousewheel", "DOMMouseScroll", "mouseover", "mouseout", "mousemove", "selectstart", "selectend", "keydown", "keypress", "keyup", "orientationchange", "touchstart", "touchmove", "touchend", "touchcancel", "pointerdown", "pointermove", "pointerup", "pointerleave", "pointercancel", "gesturestart", "gesturechange", "gestureend", "focus", "blur", "change", "reset", "select", "submit", "focusin", "focusout", "load", "unload", "beforeunload", "resize", "move", "DOMContentLoaded", "readystatechange", "error", "abort", "scroll"]); function m(e, t) { return t && `${t}::${p++}` || e.uidEvent || p++ } function y(e) { const t = m(e); return e.uidEvent = t, d[t] = d[t] || {}, d[t] } function v(e, t, n = null) { return Object.values(e).find((e => e.callable === t && e.delegationSelector === n)) } function E(e, t, n) { const r = "string" == typeof t, o = r ? n : t || n; let s = O(e); return b.has(s) || (s = e), [r, o, s] } function A(e, t, n, r, o) { if ("string" != typeof t || !e) return; let [s, i, a] = E(t, n, r); if (t in h) { const e = e => function (t) { if (!t.relatedTarget || t.relatedTarget !== t.delegateTarget && !t.delegateTarget.contains(t.relatedTarget)) return e.call(this, t) }; i = e(i) } const c = y(e), u = c[a] || (c[a] = {}), f = v(u, i, s ? n : null); if (f) return void (f.oneOff = f.oneOff && o); const g = m(i, t.replace(l, "")), d = s ? function (e, t, n) { return function r(o) { const s = e.querySelectorAll(t); for (let { target: i } = o; i && i !== this; i = i.parentNode)for (const a of s) if (a === i) return j(o, { delegateTarget: i }), r.oneOff && _.off(e, o.type, t, n), n.apply(i, [o]) } }(e, n, i) : function (e, t) { return function n(r) { return j(r, { delegateTarget: e }), n.oneOff && _.off(e, r.type, t), t.apply(e, [r]) } }(e, i); d.delegationSelector = s ? n : null, d.callable = i, d.oneOff = o, d.uidEvent = g, u[g] = d, e.addEventListener(a, d, s) } function w(e, t, n, r, o) { const s = v(t[n], r, o); s && (e.removeEventListener(n, s, Boolean(o)), delete t[n][s.uidEvent]) } function C(e, t, n, r) { const o = t[n] || {}; for (const [s, i] of Object.entries(o)) s.includes(r) && w(e, t, n, i.callable, i.delegationSelector) } function O(e) { return e = e.replace(f, ""), h[e] || e } const _ = { on(e, t, n, r) { A(e, t, n, r, !1) }, one(e, t, n, r) { A(e, t, n, r, !0) }, off(e, t, n, r) { if ("string" != typeof t || !e) return; const [o, s, i] = E(t, n, r), a = i !== t, c = y(e), u = c[i] || {}, l = t.startsWith("."); if (void 0 === s) { if (l) for (const n of Object.keys(c)) C(e, c, n, t.slice(1)); for (const [n, r] of Object.entries(u)) { const o = n.replace(g, ""); a && !t.includes(o) || w(e, c, i, r.callable, r.delegationSelector) } } else { if (!Object.keys(u).length) return; w(e, c, i, s, o ? n : null) } }, trigger(e, t, n) { if ("string" != typeof t || !e) return null; const r = i(); let o = null, s = !0, a = !0, c = !1; t !== O(t) && r && (o = r.Event(t, n), r(e).trigger(o), s = !o.isPropagationStopped(), a = !o.isImmediatePropagationStopped(), c = o.isDefaultPrevented()); const u = j(new Event(t, { bubbles: s, cancelable: !0 }), n); return c && u.preventDefault(), a && e.dispatchEvent(u), u.defaultPrevented && o && o.preventDefault(), u } }; function j(e, t = {}) { for (const [n, r] of Object.entries(t)) try { e[n] = r } catch { Object.defineProperty(e, n, { configurable: !0, get: () => r }) } return e } function D(e) { if ("true" === e) return !0; if ("false" === e) return !1; if (e === Number(e).toString()) return Number(e); if ("" === e || "null" === e) return null; if ("string" != typeof e) return e; try { return JSON.parse(decodeURIComponent(e)) } catch { return e } } function S(e) { return e.replace(/[A-Z]/g, (e => `-${e.toLowerCase()}`)) } const T = { setDataAttribute(e, t, n) { e.setAttribute(`data-bs-${S(t)}`, n) }, removeDataAttribute(e, t) { e.removeAttribute(`data-bs-${S(t)}`) }, getDataAttributes(e) { if (!e) return {}; const t = {}, n = Object.keys(e.dataset).filter((e => e.startsWith("bs") && !e.startsWith("bsConfig"))); for (const r of n) { let n = r.replace(/^bs/, ""); n = n.charAt(0).toLowerCase() + n.slice(1), t[n] = D(e.dataset[r]) } return t }, getDataAttribute: (e, t) => D(e.getAttribute(`data-bs-${S(t)}`)) }; class N { static get Default() { return {} } static get DefaultType() { return {} } static get NAME() { throw new Error('You have to implement the static method "NAME", for each component!') } _getConfig(e) { return e = this._mergeConfigObj(e), e = this._configAfterMerge(e), this._typeCheckConfig(e), e } _configAfterMerge(e) { return e } _mergeConfigObj(e, t) { const n = o(t) ? T.getDataAttribute(t, "config") : {}; return { ...this.constructor.Default, ..."object" == typeof n ? n : {}, ...o(t) ? T.getDataAttributes(t) : {}, ..."object" == typeof e ? e : {} } } _typeCheckConfig(e, t = this.constructor.DefaultType) { for (const [r, s] of Object.entries(t)) { const t = e[r], i = o(t) ? "element" : null == (n = t) ? `${n}` : Object.prototype.toString.call(n).match(/\s([a-z]+)/i)[1].toLowerCase(); if (!new RegExp(s).test(i)) throw new TypeError(`${this.constructor.NAME.toUpperCase()}: Option "${r}" provided type "${i}" but expected type "${s}".`) } var n } } class $ extends N { constructor(e, t) { super(), (e = s(e)) && (this._element = e, this._config = this._getConfig(t), n.set(this._element, this.constructor.DATA_KEY, this)) } dispose() { n.remove(this._element, this.constructor.DATA_KEY), _.off(this._element, this.constructor.EVENT_KEY); for (const e of Object.getOwnPropertyNames(this)) this[e] = null } _queueCallback(e, t, n = !0) { u(e, t, n) } _getConfig(e) { return e = this._mergeConfigObj(e, this._element), e = this._configAfterMerge(e), this._typeCheckConfig(e), e } static getInstance(e) { return n.get(s(e), this.DATA_KEY) } static getOrCreateInstance(e, t = {}) { return this.getInstance(e) || new this(e, "object" == typeof t ? t : null) } static get VERSION() { return "5.3.7" } static get DATA_KEY() { return `bs.${this.NAME}` } static get EVENT_KEY() { return `.${this.DATA_KEY}` } static eventName(e) { return `${e}${this.EVENT_KEY}` } } const M = '[data-bs-toggle="button"]'; class k extends $ { static get NAME() { return "button" } toggle() { this._element.setAttribute("aria-pressed", this._element.classList.toggle("active")) } static jQueryInterface(e) { return this.each((function () { const t = k.getOrCreateInstance(this); "toggle" === e && t[e]() })) } } var I, L; _.on(document, "click.bs.button.data-api", M, (e => { e.preventDefault(); const t = e.target.closest(M); k.getOrCreateInstance(t).toggle() })), I = k, L = () => { const e = i(); if (e) { const t = I.NAME, n = e.fn[t]; e.fn[t] = I.jQueryInterface, e.fn[t].Constructor = I, e.fn[t].noConflict = () => (e.fn[t] = n, I.jQueryInterface) } }, "loading" === document.readyState ? (a.length || document.addEventListener("DOMContentLoaded", (() => { for (const e of a) e() })), a.push(L)) : L(), e.Button = k }));
